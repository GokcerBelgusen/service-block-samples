spring:
  profiles:
    active: development,cloud
server:
  port: 8787
---
spring:
  profiles: development
  datasource:
    platform: org.hibernate.dialect.H2Dialect
  cloud:
    stream:
      bindings:
        input:
          destination: project
          group: project-group
          contentType: 'application/json'
          consumer:
            durableSubscription: true
            concurrency: 10
        output:
          destination: project
          contentType: 'application/json'
eureka:
  client:
    enabled: false
amazon:
  aws:
    access-key-id: ${AMAZON_AWS_ACCESS_KEY_ID:replace}
    access-key-secret: ${AMAZON_AWS_ACCESS_KEY_SECRET:replace}
ribbon:
  ReadTimeout: 30000
  ConnectTimeout: 30000
github:
  access-token: ${GITHUB_ACCESS_TOKEN:replace}
---
spring:
  profiles: test
eureka:
  client:
    enabled: false
---
spring:
  profiles: docker
eureka:
  client:
    service-url:
      defaultZone: http://${DOCKER_IP:192.168.99.100}:8761/eureka
    registryFetchIntervalSeconds: 5
  instance:
    hostname: ${DOCKER_IP:192.168.99.100}
    instance-id: ${spring.application.name}:${random.int}
    leaseRenewalIntervalInSeconds: 5
---
spring:
  profiles: cloud
  datasource:
    platform: org.hibernate.dialect.MariaDBDialect
  data:
    mongodb:
      uri: ${vcap.services.cqrs-lambda-db.credentials.uri}
amazon:
  aws:
    access-key-id: ${AMAZON_AWS_ACCESS_KEY_ID:replace}
    access-key-secret: ${AMAZON_AWS_ACCESS_KEY_SECRET:replace}
github:
  access-token: ${GITHUB_ACCESS_TOKEN:replace}
eureka:
  instance:
    hostname: ${vcap.application.uris[0]:localhost}
    nonSecurePort: 80
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
    leaseRenewalIntervalInSeconds: 5
  client:
    enabled: false
    region: default
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${vcap.services.discovery-service.credentials.uri:http://localhost:8761}/eureka/
